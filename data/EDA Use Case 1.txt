DataSet : cars.csv
This dataset represents rows of data that is being analysed and used by Machine Learning model. This dataset contains columns like the company which made the car, Model name,Type of the car, where it is made, if it is all wheel drive or front wheel drive, Maximum selling price, discounted price, No of cylinders, Mileage, weight and Length of the car etc. 

EXAMPLE : Do EDA on cars data set and draw some conditions

import pandas as pd
import seaborn as sns

# import cars data set
cars=pd.read_csv('E:\\BetaLab\\day 9\\cars.csv')
cars

# show how many rows and how many columns in the dataset
cars.shape

# dataset information
cars.info()

# to get only column names
cars.columns

# display top 5 rows
cars.head()

# display top 10 rows
cars.head(10)

# display last 5 rows
cars.tail()

# remove unimportant columns : MSRP,Invoice
cars=cars.drop(['MSRP','Invoice'],axis=1)

# remove duplicate rows if any
# keep first row and remove other duplicate rows of that row
cars=cars.drop_duplicates(keep='first')

# to find the total number of rows which are missing value in a column
cars.isnull().sum()

# remove the rows having missing values (in cylinders)
cars.dropna(inplace=True)

# sort the data w.r.t. to a column - here we sort on 'MPG_City' in descending order
cars_sort=cars.sort_values(by='MPG_City',ascending=False)

# iloc[] ==> gives integer location based indexing /selection 
cars.iloc[[0,2,4],[1,3,5]]

# select first five rows in MPG_City column using iloc() and loc()
x=cars.iloc[0:5,8]
x
x=cars.loc[0:5,'MPG_City']
x

# to select only numeric typeof columns  we can give their names or datatypes as 
cars1=cars[['EngineSize','Cylinders','Horsepower','MPG_City','MPG_Highway','Weight','Wheelbase','Length']]
cars1
cars1=cars.select_dtypes(include=['float64','int64'])
cars1

# summary statistics
cars.describe()

# Find corelation bewteen all columns
cars.corr(method='pearson')

# display a distribution plot with kerncel density
sns.displot(data=cars,x='MPG_City',bins=10,kde=True,color='blue')

# draw regression plot between length of the car and mileage in city
sns.regplot(x='Length',y='MPG_City',data=cars)

# box plots can be drawn only for categorical variables
box1=sns.boxplot(x='Type',y='MPG_City',data=cars)

# The origin of car is Asis gives slighly more mileage
box2=sns.boxplot(x='Origin',y='MPG_City',data=cars)
